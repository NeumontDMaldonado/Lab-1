package christian.chess.pieces;

import java.util.ArrayList;

import christian.chess.tile.Tile;

public class Rook extends Piece
{
	public Rook(String s, String c)
	{
		super(s, c);
	}
	
//	public ArrayList<String> checkForAvailableMoves(Tile[][] b, int startCol, int startRow)
//	{
//		ArrayList<String> moveList = new ArrayList<>();
//		
//		for(int i = 0; i < 8; i++)
//		{
//			for(int j = 0; j < 8; j++)
//			{
//				if(validateMove(b, startCol, startRow, i, j))
//				{
//					moveList.add(i + ", " + j);
//				}
//			}
//		}
//		
//		return moveList;
//	}
	
	public boolean validateMove(int startCol, int startRow, int endCol, int endRow)
	{
		//Return true if move is valid, false if it isn't
		
		//If the start and end rows are the same and stay within bounds
		//or the start and end columns are the same and stay within bounds
		if((startRow == endRow && Math.abs(startCol - endCol) <= maxBounds)
				|| (startCol == endCol && Math.abs(startRow - endRow) <= maxBounds))
		{
			return true;
		}
		else
		{
			return false;
		}
	}
}